*** src/test/com/thoughtworks/qdox/directorywalker/DirectoryScannerTest.java.orig	2004-06-04 22:28:48.000000000 -0400
--- src/test/com/thoughtworks/qdox/directorywalker/DirectoryScannerTest.java	2004-06-04 22:29:22.000000000 -0400
***************
*** 1,12 ****
  package com.thoughtworks.qdox.directorywalker;
  
! import junit.framework.TestCase;
  
  import java.io.File;
  
  import org.jmock.Mock;
  
! public class DirectoryScannerTest extends TestCase {
  
      class MockFile extends File {
          boolean _isDirectory;
--- 1,12 ----
  package com.thoughtworks.qdox.directorywalker;
  
! import org.jmock.MockObjectTestCase;
  
  import java.io.File;
  
  import org.jmock.Mock;
  
! public class DirectoryScannerTest extends MockObjectTestCase {
  
      class MockFile extends File {
          boolean _isDirectory;
***************
*** 125,133 ****
          rootDir.children = new File[]{new MockFile("blah.txt"), new MockFile("foo.txt"), new MockFile("pig.java")};
          DirectoryScanner scanner = new DirectoryScanner(rootDir);
          Mock mockFileVisitor = new Mock(FileVisitor.class);
!         mockFileVisitor.expect("visitFile", rootDir.children[0]);
!         mockFileVisitor.expect("visitFile", rootDir.children[1]);
!         mockFileVisitor.expect("visitFile", rootDir.children[2]);
  
          scanner.scan((FileVisitor) mockFileVisitor.proxy());
  
--- 125,133 ----
          rootDir.children = new File[]{new MockFile("blah.txt"), new MockFile("foo.txt"), new MockFile("pig.java")};
          DirectoryScanner scanner = new DirectoryScanner(rootDir);
          Mock mockFileVisitor = new Mock(FileVisitor.class);
!         mockFileVisitor.expects(once()).method("visitFile").with(same(rootDir.children[0]));
!         mockFileVisitor.expects(once()).method("visitFile").with(same(rootDir.children[1]));
!         mockFileVisitor.expects(once()).method("visitFile").with(same(rootDir.children[2]));
  
          scanner.scan((FileVisitor) mockFileVisitor.proxy());
  
